int x = 62;
int y = 62;

int vertical = 0;
int horizontal = 0;

int shipWidth = 32;
int shipHeight = 32;


void setup()
{
	size(800, 600);
	background(0, 0, 0);
	frameRate(60);
	noStroke();
}


void SpaceShip()
{
	fill(0,50,230);
	rect(x,y,shipWidth,shipHeight);
}


void keyTyped()
{
	if(key == 'd')
	{
		horizontal = 2;
	}
	else if(key == 'a')
	{
		horizontal = -2;
	}
	else if(key == 'w')
	{
		vertical = -2;
	}
	else if(key == 's')
	{
		vertical = 2;
	}
}


void keyReleased()
{
	if(key == 'd' && horizontal > 0)
	{
		horizontal = 0;
	}
	else if(key == 'a' && horizontal < 0)
	{
		horizontal = 0;
	}
	else if(key == 'w' && vertical < 0)
	{
		vertical = 0;
	}
	else if(key == 's' && vertical > 0)
	{
		vertical = 0;
	}
}


bool IsPointInsideBox(
		int x,
		int y,
		int boxX,
		int boxY,
		int boxWidth,
		int boxHeight)
{
	bool isXInside = x >= boxX && x <= (boxX + boxWidth);
	bool isYInside = y >= boxY && y <= (boxY + boxHeight);
	
	return isXInside && isYInside;
}


bool IsBoxInsideBox(
		int x,
		int y,
		int boxX,
		int boxY,
		int boxWidth,
		int boxHeight)
{
	bool topLeftCollision = IsPointInsideBox(
		x,
		y,
		boxX,
		boxY,
		boxWidth,
		boxHeight);
	
	bool topRightCollision = IsPointInsideBox(
		x + shipWidth,
		y,
		boxX,
		boxY,
		boxWidth,
		boxHeight);
	
	bool bottomLeftCollision = IsPointInsideBox(
		x,
		y + shipHeight,
		boxX,
		boxY,
		boxWidth,
		boxHeight);
	
	bool bottomRightCollision = IsPointInsideBox(
		x + shipWidth,
		y + shipHeight,
		boxX,
		boxY,
		boxWidth,
		boxHeight);
	
	return topLeftCollision || topRightCollision || bottomLeftCollision || bottomRightCollision;
}


void draw()
{
	if(!IsBoxInsideBox(x + horizontal, y, 120, 120, 32, 32)
		&& !IsBoxInsideBox(x + horizontal, y, 160, 160, 32, 32)){
		x = x + horizontal;
	}
	if(!IsBoxInsideBox(x, y + vertical, 120, 120, 32, 32)
		&& !IsBoxInsideBox(x, y + vertical, 160, 160, 32, 32)){
		 y = y + vertical;
	}
	
	clear();
	SpaceShip();
	
	fill(255, 255, 255);
	rect(120, 120, 32, 32);
	rect(160, 160, 32, 32);
	
	//rect(200, 0, 32, 1000);
	//rect(0, 200, 1000, 32);
	//rect(30, 0, 32, 1000);
}




